[workspace]
members = ["crates/*"]
resolver = "2"

[workspace.package]
version = "0.1.0"
authors = ["Kapsel Contributors"]
edition = "2021"
license = "MIT OR Apache-2.0"
repository = "https://github.com/kapsel/kapsel"
rust-version = "1.75"

[workspace.dependencies]
# Async runtime
tokio = { version = "1.35", features = ["full", "tracing"] }
tokio-util = "0.7"

# Web framework
axum = { version = "0.8", features = ["macros", "ws"] }
axum-extra = { version = "0.10", features = ["typed-header"] }
tower = "0.5"
tower-http = { version = "0.6", features = ["trace", "cors", "timeout", "limit"] }
hyper = "1.1"

# Database
sqlx = { version = "0.8", features = ["runtime-tokio-rustls", "postgres", "sqlite", "uuid", "chrono", "json"] }
deadpool-postgres = "0.14"

# Serialization
serde = { version = "1.0", features = ["derive", "rc"] }
serde_json = "1.0"
serde_with = "3.6"
bytes = "1.5"

# Error handling
thiserror = "2.0"
anyhow = "1.0"

# Tracing and metrics
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }
opentelemetry = "0.31"
opentelemetry_sdk = { version = "0.31", features = ["rt-tokio"] }
opentelemetry-otlp = "0.31"
prometheus = "0.14"

# Utilities
uuid = { version = "1.7", features = ["v4", "serde"] }
chrono = { version = "0.4", features = ["serde"] }
url = "2.5"
base64 = "0.22"
sha2 = "0.10"
hmac = "0.12"
hex = "0.4"

# HTTP
http = "1.0"
reqwest = { version = "0.12", features = ["json"] }

# Configuration
config = "0.15"
dotenvy = "0.15"

# Testing
wiremock = "0.6"
proptest = "1.4"
arbitrary = { version = "1.3", features = ["derive"] }
criterion = "0.7"
insta = { version = "1.34", features = ["yaml", "json"] }
fake = "4.4"
rstest = "0.26"
testcontainers = "0.25"
testcontainers-modules = { version = "0.13", features = ["postgres"] }

# Utilities
log = "0.4"
rand = "0.9"

# Development dependencies
pretty_assertions = "1.4"
tempfile = "3.9"

[workspace.lints.rust]
unsafe_code = "forbid"
missing_docs = "warn"

[workspace.lints.clippy]
all = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }
nursery = { level = "warn", priority = -1 }
cargo = { level = "warn", priority = -1 }

# Allow some pedantic lints
module_name_repetitions = "allow"
must_use_candidate = "allow"
missing_errors_doc = "allow"
missing_panics_doc = "allow"

# Allow noisy cargo lints
cargo_common_metadata = "allow"
multiple_crate_versions = "allow"

# Allow noisy style lints
missing_const_for_fn = "allow"
missing_enforced_import_renames = "allow"
doc_markdown = "allow"

# Allow disallowed macros lint (we've fixed the actual usage)
disallowed_macros = "allow"

# Deny dangerous patterns
unwrap_used = "deny"
expect_used = "deny"
panic = "deny"
unimplemented = "deny"
todo = "deny"
dbg_macro = "deny"
print_stdout = "deny"
print_stderr = "deny"

# Performance
inefficient_to_string = "deny"
unnecessary_self_imports = "deny"
unused_async = "deny"

[profile.dev]
opt-level = 0
debug = true
incremental = true

[profile.dev.package."*"]
opt-level = 3

[profile.test]
opt-level = 0
debug = true

[profile.release]
opt-level = 3
lto = "thin"
debug = false
strip = true
codegen-units = 1
panic = "abort"

[profile.bench]
inherits = "release"

# Root package for workspace-wide tooling
[package]
name = "kapsel-workspace"
version = "0.1.0"
edition = "2021"
publish = false

[[bin]]
name = "kapsel"
path = "src/main.rs"
required-features = ["bin"]

[features]
default = ["sqlite"]
bin = []
sqlite = []
docker = []

[dependencies]
anyhow = { workspace = true }
tokio = { workspace = true }
sqlx = { workspace = true }
tracing = { workspace = true }
tracing-subscriber = { workspace = true }
kapsel-api = { path = "crates/kapsel-api" }

[dev-dependencies]
cargo-husky = "1.5"
test-harness = { path = "crates/test-harness" }
kapsel-api = { path = "crates/kapsel-api" }
axum = { workspace = true }
serde_json = { workspace = true }
sqlx = { workspace = true }
uuid = { workspace = true }
http = { workspace = true }
reqwest = { workspace = true }
