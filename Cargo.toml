[workspace]
members = ["crates/*"]
resolver = "2"

[workspace.package]
version = "0.1.0"
edition = "2021"
authors = ["Kapsel Contributors"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/kapsel-hq/kapsel"
rust-version = "1.75"

[workspace.lints.rust]
unsafe_code = "forbid"
missing_docs = "warn"

[workspace.lints.clippy]
all = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }
nursery = { level = "warn", priority = -1 }
cargo = { level = "warn", priority = -1 }

module_name_repetitions = "allow"
must_use_candidate = "allow"
missing_errors_doc = "allow"
missing_panics_doc = "allow"

cargo_common_metadata = "allow"
multiple_crate_versions = "allow"

missing_const_for_fn = "allow"
missing_enforced_import_renames = "allow"
doc_markdown = "allow"
disallowed_macros = "allow"

unwrap_used = "deny"
expect_used = "deny"
panic = "deny"
unimplemented = "deny"
todo = "deny"
dbg_macro = "deny"
print_stdout = "deny"
print_stderr = "deny"

inefficient_to_string = "deny"
unnecessary_self_imports = "deny"
unused_async = "deny"

[profile.dev]
opt-level = 0
debug = true
incremental = true

[profile.dev.package."*"]
opt-level = 3

[profile.test]
opt-level = 0
debug = true

[profile.release]
opt-level = 3
lto = "thin"
debug = false
strip = true
codegen-units = 1
panic = "abort"

[profile.bench]
inherits = "release"

[workspace.dependencies]
# Async runtime
tokio = { version = "1.35", features = ["full", "tracing"] }
tokio-util = "0.7"

# Web frameworks
axum = { version = "0.8", features = ["macros", "ws"] }
tower-http = { version = "0.6", features = ["trace", "cors", "timeout", "limit"] }
tower = "0.5"
hyper = "1.0"

# Database drivers
sqlx = { version = "0.8", default-features = false, features = ["runtime-tokio-rustls", "postgres", "uuid", "chrono", "json", "macros", "migrate"] }

# Serialization
serde = { version = "1.0", features = ["derive", "rc"] }
serde_json = "1.0"
bytes = "1.5"

# Error handling
thiserror = "2.0"
anyhow = "1.0"

# Observability
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }
opentelemetry = "0.31"
opentelemetry_sdk = { version = "0.31", features = ["rt-tokio"] }
opentelemetry-otlp = "0.31"
prometheus = "0.14"

# Utilities
uuid = { version = "1.7", features = ["v4", "serde"] }
chrono = { version = "0.4", features = ["serde"] }
url = "2.5"
base64 = "0.22"
sha2 = "0.10"
hmac = "0.12"
hex = "0.4"
rand = "0.9"
tempfile = "3.9"

# HTTP client
http = "1.0"
reqwest = { version = "0.12", features = ["json"] }

# Testing infrastructure
wiremock = "0.6"
proptest = "1.4"
arbitrary = { version = "1.3", features = ["derive"] }
criterion = "0.7"
insta = "1.34"
testcontainers = "0.25"
testcontainers-modules = { version = "0.13", features = ["postgres"] }

[package]
name = "kapsel-workspace"
version = "0.1.0"
edition = "2021"
publish = false

[[bin]]
name = "kapsel"
path = "src/main.rs"

[[bench]]
name = "webhook_benchmarks"
harness = false

[dependencies]
anyhow = { workspace = true }
tokio = { workspace = true }
sqlx = { workspace = true }
tracing = { workspace = true }
tracing-subscriber = { workspace = true }
kapsel-api = { path = "crates/kapsel-api" }
kapsel-delivery = { path = "crates/kapsel-delivery" }

[dev-dependencies]
cargo-husky = { version = "1.5", default-features = false, features = ["user-hooks"] }
kapsel-testing = { path = "crates/kapsel-testing" }
kapsel-api = { path = "crates/kapsel-api" }
kapsel-core = { path = "crates/kapsel-core" }
kapsel-delivery = { path = "crates/kapsel-delivery" }
axum = { workspace = true }
serde_json = { workspace = true }
tokio-util = { workspace = true }
sqlx = { workspace = true }
uuid = { workspace = true }
http = { workspace = true }
reqwest = { workspace = true }
proptest = { workspace = true }
bytes = { workspace = true }
rand = { workspace = true }
chrono = { workspace = true }
hmac = { workspace = true }
sha2 = { workspace = true }
hex = { workspace = true }
insta = { workspace = true }
testcontainers = { workspace = true }
testcontainers-modules = { workspace = true }
futures = "0.3.31"
proptest_async = { version = "0.2.1", default-features = false, features = ["tokio"] }

# Benchmarking for workspace-level benchmarks
criterion = { workspace = true }
